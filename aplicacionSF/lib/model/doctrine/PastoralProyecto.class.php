<?php

/**
 * PastoralProyecto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    pastoral
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class PastoralProyecto extends BasePastoralProyecto
{

  public function __toString()
  {
    return $this->getNombre();
  }
  
  public function cantidadPorEdades($texto, $datos)
  {
    $q1 = Doctrine_Query::create()
            ->select('MAX(u.fecha_nacimiento)') 
            ->from('PastoralUsuario u')
            ->fetchArray();
  
    list($ano,$mes,$dia) = explode("-",$q1[0]['MAX']);
    $edad_minima  = date("Y") - $ano;
    $mes_diferencia = date("m") - $mes;
    $dia_diferencia   = date("d") - $dia;
    if ($mes_diferencia < 0)
      $edad_minima--;
    else if($mes_diferencia == 0 && $dia_diferencia<0)
      $edad_minima--;    
            
    $q2 = Doctrine_Query::create()
            ->select('MIN(fecha_nacimiento)') 
            ->from('PastoralUsuario')
            ->fetchArray();
            
    list($ano,$mes,$dia) = explode("-",$q2[0]['MIN']);
    $edad_maxima  = date("Y") - $ano;
    $mes_diferencia = date("m") - $mes;
    $dia_diferencia   = date("d") - $dia;
    if ($mes_diferencia < 0)
      $edad_maxima--;
    else if($mes_diferencia == 0 && $dia_diferencia<0)
      $edad_maxima--;
    
    
    $respuesta = array();
    $edades = array();
    while($edad_minima <= $edad_maxima)
    {
    
    $ano = date("Y") - $edad_minima -1;
    $abajo = implode("-",array($ano,date("m"),date("d")));
    $ano ++;
    $arriba = implode("-",array($ano,date("m"),date("d")));
        
      $q = Doctrine_Query::create()
              ->select('COUNT(*) as total_edad') 
              ->from('PastoralUsuario u')
              ->where('u.fecha_nacimiento<?',$arriba)   
              ->andwhere('u.fecha_nacimiento>=?',$abajo)
              ;
        $alias = $q->getRootAlias();
        $q -> leftJoin($alias.'.PastoralMisionUsuarioEstado mue')
           -> andWhere($texto,$datos);
           
      $res = $q->fetchArray();         
      $suma = $res[0]['total_edad'];
      
      if($suma!=0)
        $edades[$edad_minima] =$suma;
      $edad_minima ++;
    }
    ksort($edades);
    $respuesta[0]=array_keys($edades);
    $respuesta[1]=array_values($edades);
    
    return $respuesta;
  }  
  
  public function ultimoProyectoVersionDeProyecto()
  {
    $proyecto_version = Doctrine_Core::getTable('PastoralProyectoVersion')->findOneByProyectoId($this->getId());
    return $proyecto_version;     
  }

}