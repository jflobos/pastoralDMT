<?php

/**
 * PastoralUsuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    pastoral
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class PastoralUsuario extends BasePastoralUsuario
{
    
  public function __toString()
  {
    return sprintf('%s %s', $this->getNombre(), $this->getApellidoPaterno());

  }
  
  public function getNombreCompleto()
  {
    return sprintf('%s %s', $this->getNombre(), $this->getApellidoPaterno());
  }
  
  public function getCargoActual()
  {
    $q = Doctrine_Query::create()
      ->from('PastoralUsuarioCargo uc')
      ->where('uc.usuario_id = ?',$this->getId())
      ->orderBy('uc.created_at DESC');
    return $q ->execute()->getFirst();
  }
  
  public function getCargoMisionero()
  {
    $uc = $this->getCargoActual();
    if($uc != null)
    {
      return $uc->getPastoralCargo();
    }
    else{
      return Doctrine_Core::getTable('PastoralCargo')->findOneByNombre("Misionero-Voluntario");
    }
  }
  
  public function getEdad()
  {
    if($this->getFechaNacimiento() == 0 || $this->getFechaNacimiento() == null)
      return -1;
  
    list($ano,$mes,$dia) = explode("-",$this->getFechaNacimiento());
    $edad  = date("Y") - $ano;
    $mes_diferencia = date("m") - $mes;
    $dia_diferencia   = date("d") - $dia;
    if ($mes_diferencia < 0)
      $edad--;
    else if($mes_diferencia == 0 && $dia_diferencia<0)
      $edad--;
        
    return $edad;
  }
  
  public function getMUEs()
  {
    return Doctrine_Core::getTable('PastoralMisionUsuarioEstado')->findByUsuarioId($this->getId());
  }
  
  public function getEstudios()
  {
    $tipo_institucion = $this->getPastoralTipoInstitucion();
    switch ($tipo_institucion->getNombre()){
        case "Universidad":
          return $this->getPastoralUniversidad()->getNombre();
          break;
        case "Colegio":
          return $this->getPastoralColegio()->getNombre();
          break;
        default:
          return "ninguna";
          break;
    }
  }
  
  public function getEstudios2()
  {
    $tipo_institucion = $this->getPastoralTipoInstitucion();
    switch ($tipo_institucion->getNombre()){
        case "Universidad":
          return $this->getPastoralCarrera()->getNombre();
          break;
        case "Colegio":
          return $this->getPastoralCurso()->getNombre();
          break;
        default:
          return "ninguna";
          break;
    }
  }
  
  public function fueAMision($mision_id)
  {
    $q1 = Doctrine_Core::getTable('PastoralMisionUsuarioEstado')->addMUEporMisionQuery($mision_id);
    $q2 = Doctrine_Core::getTable('PastoralMisionUsuarioEstado')->addMUEporUsuarioQuery($this->getId(),$q1);
    $mue = $q2->fetchOne();
    if($mue)
    {
      $estado = $mue->getPastoralEstadoPostulacion();
      if($estado->getNombre()=='Rechazado'||$estado->getNombre()=='No va' ||$estado->getNombre()=='No asistio'){
          return 0;
      }
    }
    else
    {
      return 0;
    }
    return 1;
  }
  
  public function debioIrAMision($mision_id)
  {
    $q1 = Doctrine_Core::getTable('PastoralMisionUsuarioEstado')->addMUEporMisionQuery($mision_id);
    $q2 = Doctrine_Core::getTable('PastoralMisionUsuarioEstado')->addMUEporUsuarioQuery($this->getId(),$q1);
    $mue = $q2->fetchOne();
    if($mue)
    {
      $estado = $mue->getPastoralEstadoPostulacion();
      if($estado->getNombre()=='Rechazado'||$estado->getNombre()=='No va'){
          return 0;
      }
    }
    else
    {
      return 0;
    }
    return 1;
  }
  
  public function getMUEPorMisionId($mision_id)
  {
      $q1 = Doctrine_Core::getTable('PastoralMisionUsuarioEstado')->addMUEporMisionQuery($mision_id);
      $q2 = Doctrine_Core::getTable('PastoralMisionUsuarioEstado')->addMUEporUsuarioQuery($this->getId(),$q1);
      return $q2->fetchOne();
  }
  
  public function getMisionActual()
  {
    $q = Doctrine_Core::getTable('PastoralMisionUsuarioEstado')->addMUEporMisionActivaYUsuarioQuery($this->getId());
    
    $mision = $q->fetchOne()->PastoralMision;
    
    if($mision != null)
      return $mision;
      
    $uc = $this->getCargoActual();
    if($uc && $uc->getMisionId()>0 && !$uc->getPastoralMision()->finalizada())
      return $uc->getPastoralMision();
    return null;
  }
  
  public function puedePostular()
  {
    $mues = $this->getMues();
    foreach($mues as $mue)
    {
      if(!$mue->getPastoralMision()->getFechaTermino() > date())
        return false;
    }
    return true;
  }
  
  public function getEmail()
  {
    return $this->getUser()->getEmailAddress();
  } 

    
    
  public function borrarUsuarioDeMueDelProyectoVersion($proyecto_version_id)
  {        
      $q1 = Doctrine_Query::create()
          ->select('mue.id as id')
          ->from('PastoralMisionUsuarioEstado mue')
          ->andWhere('mue.usuario_id = ?' ,$this->getId())
          ->leftjoin('mue.PastoralMision m')
          ->leftjoin('m.PastoralGrupo g')
          ->andWhere('g.proyecto_version_id = ?' ,$proyecto_version_id)
          ;
      
      $res = $q1->fetchArray();
      
      if($res[0]['id']!=null)
      {
        $mue = Doctrine_Core::getTable('PastoralMisionUsuarioEstado')->findOneById($res[0]['id']);
        $mue->delete();
      }
        
  }
  
  public function veCoevaluacion()
  {
    $q = Doctrine_Core::getTable('PastoralMisionUsuarioEstado')->addMUEporMisionActivaYUsuarioQuery($this->getId());
    
    $mue = $q->fetchOne();
    
    
    if($mue == null)
      return false;
      
    if($mue->getPastoralMision() == null)
      return false;
      
    return true;
  }
}